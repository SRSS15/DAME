package it.unisannio.srss.ame.payloads.common;

import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.util.HashSet;
import java.util.Set;

import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;

import android.util.Xml;

public class Config {

	private Set<String> permissions;

	private FileLocation fileLocation;

	public Config() {
		permissions = new HashSet<String>();
	}

	public Set<String> getPermissions() {
		return permissions;
	}

	public void setPermissions(Set<String> permissions) {
		this.permissions = permissions;
	}

	public FileLocation getFileLocation() {
		return fileLocation;
	}

	public void setFileLocation(FileLocation filename) {
		this.fileLocation = filename;
	}

	public void addPermission(String permission) {
		permissions.add(permission);
	}

	public static Config readFromXML(URL url) {
		Config res = new Config();
		InputStream in = null;
		try {
			in = url.openStream();
			XmlPullParser parser = Xml.newPullParser();
			parser.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES, false);
			parser.setInput(in, null);
			parser.nextTag();
			readPermissions(parser, res);
			readFileLocation(parser, res);
		} catch (Exception e) {
			res = null;
		} finally {
			if (in != null)
				try {
					in.close();
				} catch (IOException e) {
				}
		}
		return res;
	}

	private static void readPermissions(XmlPullParser parser, Config c)
			throws XmlPullParserException, IOException {
		parser.require(XmlPullParser.START_TAG, null, "permissions");
		while (parser.next() != XmlPullParser.END_TAG) {
			if (parser.getEventType() != XmlPullParser.START_TAG) {
				continue;
			}
			String name = parser.getName();
			if (name.equals("permission")) {
				parser.require(XmlPullParser.START_TAG, null, name);
				String permission = readText(parser);
				parser.require(XmlPullParser.END_TAG, null, name);
				c.addPermission(permission);
			}
		}
		parser.require(XmlPullParser.END_TAG, null, "permissions");
	}

	private static void readFileLocation(XmlPullParser parser, Config c)
			throws XmlPullParserException, IOException {
		parser.nextTag();
		String name = parser.getName();
		if (name.equals("file-location")) {
			parser.require(XmlPullParser.START_TAG, null, name);
			String relStr = parser
					.getAttributeValue(null, "relative-to-sdcard");
			boolean rel = new Boolean(relStr);
			String filename = readText(parser);
			parser.require(XmlPullParser.END_TAG, null, name);
			FileLocation fl = new FileLocation();
			fl.setFilename(filename);
			fl.setRelativeToSdcard(rel);
			c.setFileLocation(fl);
		} else
			throw new IllegalStateException();
	}

	private static String readText(XmlPullParser parser) throws IOException,
			XmlPullParserException {
		String result = "";
		if (parser.next() == XmlPullParser.TEXT) {
			result = parser.getText();
			parser.nextTag();
		}
		return result;
	}
}
